// <auto-generated />
using System;
using Hammer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hammer.Migrations
{
    [DbContext(typeof(HammerContext))]
    [Migration("20250814132441_CreateInitialSchema")]
    partial class CreateInitialSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Hammer.Data.AltAccount", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("AltId")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTimeOffset>("RegisteredAt")
                        .HasColumnType("DATETIME(6)");

                    b.Property<ulong>("StaffMemberId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("UserId", "AltId");

                    b.ToTable("AltAccount", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.BlockedReporter", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTimeOffset>("BlockedAt")
                        .HasColumnType("DATETIME(6)");

                    b.Property<ulong>("StaffMemberId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("UserId", "GuildId");

                    b.ToTable("BlockedReporter", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.DeletedMessage", b =>
                {
                    b.Property<ulong>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("MessageId"));

                    b.Property<string>("AddedByBot")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<byte[]>("Attachments")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<ulong>("AuthorId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreationTimestamp")
                        .HasColumnType("DATETIME(6)");

                    b.Property<DateTimeOffset>("DeletionTimestamp")
                        .HasColumnType("DATETIME(6)");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("StaffMemberId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("MessageId");

                    b.ToTable("DeletedMessage", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.Infraction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AdditionalInformation")
                        .HasColumnType("longtext");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTimeOffset>("IssuedAt")
                        .HasColumnType("DATETIME(6)");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<int?>("RuleId")
                        .HasColumnType("int");

                    b.Property<string>("RuleText")
                        .HasColumnType("longtext");

                    b.Property<ulong>("StaffMemberId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Infraction", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.MemberNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<ulong>("AuthorId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreationTimestamp")
                        .HasColumnType("DATETIME(6)");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("MemberNote", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.Mute", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTimeOffset?>("ExpiresAt")
                        .HasColumnType("DATETIME(6)");

                    b.HasKey("UserId", "GuildId");

                    b.ToTable("Mute", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.ReportedMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("Attachments")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<ulong>("AuthorId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MessageId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ReporterId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("ReportedMessage", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.Rule", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Brief")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id", "GuildId");

                    b.ToTable("Rule", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.StaffMessage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("RecipientId")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTimeOffset>("SentAt")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong>("StaffMemberId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("StaffMessage", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.TemporaryBan", b =>
                {
                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("DATETIME(6)");

                    b.HasKey("UserId", "GuildId");

                    b.ToTable("TemporaryBan", (string)null);
                });

            modelBuilder.Entity("Hammer.Data.TrackedMessage", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<byte[]>("Attachments")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<ulong>("AuthorId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("CreationTimestamp")
                        .HasColumnType("DATETIME(6)");

                    b.Property<DateTimeOffset?>("DeletionTimestamp")
                        .HasColumnType("DATETIME(6)");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("TrackedMessages", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
